version: '3.8'

services:
  app:
    build:
      context: .
    container_name: event-app
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=mydb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=4000
    ports:
      - '3000:4000'
    depends_on:
      - db
      - redis
    networks:
      - event-management-system_nestjs-network
    restart: always

  db:
    image: postgres:16
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - event-management-system_nestjs-network
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d mydb']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - '6379:6379'
    networks:
      - event-management-system_nestjs-network
    restart: always
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  event-management-system_nestjs-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
